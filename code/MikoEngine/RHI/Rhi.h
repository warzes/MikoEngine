// rendering hardware interface
#pragma once

//-----------------------------------------------------------------------------
// Forward declarations
//-----------------------------------------------------------------------------
namespace Rhi
{
	class IRhi;
	class IShaderLanguage;
	class IResource;
	class IRootSignature;
	class IResourceGroup;
	class IGraphicsProgram;
	class IVertexArray;
	class IRenderPass;
	class IQueryPool;
	class IRenderTarget;
	class IRenderWindow;
	class ISwapChain;
	class IFramebuffer;
	struct FramebufferAttachment;
	class CommandBuffer;
	class IBufferManager;
	class IBuffer;
	class IVertexBuffer;
	class IIndexBuffer;
	class ITextureBuffer;
	class IStructuredBuffer;
	class IIndirectBuffer;
	class IUniformBuffer;
	class ITextureManager;
	class ITexture;
	class ITexture1D;
	class ITexture1DArray;
	class ITexture2D;
	class ITexture2DArray;
	class ITexture3D;
	class ITextureCube;
	class ITextureCubeArray;
	class IState;
	class IPipelineState;
	class IGraphicsPipelineState;
	class IComputePipelineState;
	class ISamplerState;
	class IShader;
	class IVertexShader;
	class ITessellationControlShader;
	class ITessellationEvaluationShader;
	class IGeometryShader;
	class IFragmentShader;
	class ITaskShader;
	class IMeshShader;
	class IComputeShader;
} // namespace Rhi

#include "RHIDebug.h"
#include "Core/AssertMacros.h"
#include "DefaultLog.h"
#include "DefaultAllocator.h"
#include "RHITypes.h"
#include "SamplerStateTypes.h"
#include "RootSignatureTypes.h"
#include "TextureTypes.h"
#include "BlendStateTypes.h"
#include "BufferTypes.h"
#include "VertexArrayTypes.h"
#include "IndexBufferTypes.h"
#include "IndirectBufferTypes.h"
#include "RasterizerStateTypes.h"
#include "DepthStencilStateTypes.h"
#include "PipelineStateTypes.h"
#include "ShaderTypes.h"
#include "QueryType.h"
#include "Core/MemoryPtr.h"
#include "Capabilities.h"
#include "Statistics.h"
#include "IRhi.h"
#include "IShaderLanguage.h"
#include "IResource.h"
#include "IRootSignature.h"
#include "IResourceGroup.h"
#include "IGraphicsProgram.h"
#include "IRenderPass.h"
#include "IQueryPool.h"
#include "IRenderTarget.h"
#include "ISwapChain.h"
#include "IFramebuffer.h"
#include "IBufferManager.h"
#include "IVertexArray.h"
#include "IBuffer.h"
#include "IVertexBuffer.h"
#include "IIndexBuffer.h"
#include "ITextureBuffer.h"
#include "IStructuredBuffer.h"
#include "IIndirectBuffer.h"
#include "IUniformBuffer.h"
#include "ITextureManager.h"
#include "ITexture.h"
#include "ITexture1D.h"
#include "ITexture1DArray.h"
#include "ITexture2D.h"
#include "ITexture2DArray.h"
#include "ITexture3D.h"
#include "ITextureCube.h"
#include "ITextureCubeArray.h"
#include "IState.h"
#include "IPipelineState.h"
#include "IGraphicsPipelineState.h"
#include "IComputePipelineState.h"
#include "ISamplerState.h"
#include "IShader.h"
#include "IVertexShader.h"
#include "ITessellationControlShader.h"
#include "ITessellationEvaluationShader.h"
#include "IGeometryShader.h"
#include "IFragmentShader.h"
#include "ITaskShader.h"
#include "IMeshShader.h"
#include "IComputeShader.h"
#include "CommandBuffer.h"